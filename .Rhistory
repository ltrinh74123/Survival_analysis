<<<<<<< HEAD
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_cox <- summary(fit)
coefs <- diagnosis_cox$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
#   significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
#   significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
#   colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
fit <- survreg(`Diagnosis till death` ~ ., data = data_stand_filtered, dist = "lognormal")
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
sum(data_stand_filtered$`Diagnosis till death` <= 0)
data_stand_filtered %>% filter(`Diagnosis till death` <= 0)
data_stand_filtered
View(data_stand_filtered)
data
View(data_stand_filtered)
=======
library(survminer)
library(pammtools)
>>>>>>> 05d041118da5a57a513142f73de828a5770fbbd3
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinsonâ€™s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
<<<<<<< HEAD
suppressMessages({
suppressWarnings({
library(rms) #Important: Leave library RMS here to not break shiny
})
})
data$`CBI::PercentSleepFCorrected` = as.numeric(data$`CBI::PercentSleepFCorrected`)
data$`CBI::PercentBeliefsFCorrected` = as.numeric(data$`CBI::PercentBeliefsFCorrected`)
df <- data %>% select(-'PID', -`Diagnosis_name`, -'Diagnosis_number', -`Sex (Male 1, Female 2)`, -`Onset till death`, -`Original_order`, -'SummaryPrimaryDiagnosis_descriptor', -`DAD::ExportTotalIadls`,	-`DAD::ExportTotalDad`,	-`DAD::ExportTotalBadl`)
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
#Standarize data
data_standardized <- as.data.frame(lapply(df, rescale), check.names = FALSE)
data_stand <- cbind(data$Diagnosis_name, data$`Diagnosis till death`, data$`Sex (Male 1, Female 2)`, data_standardized)
colnames(data_stand)[colnames(data_stand) == "data$Diagnosis_name"] <- "Diagnosis_name"
colnames(data_stand)[colnames(data_stand) == "data$`Sex (Male 1, Female 2)`"] <- "Sex (Male 1, Female 2)"
data_stand = data_stand %>% drop_na()
```
data_stand
data_stand
View(data_stand)
ect(-'PID', -`Diagnosis_name`, -'Diagnosis_number', -`Sex (Male 1, Female 2)`, -`Onset till death`, -`Original_order`, -'SummaryPrimaryDiagnosis_descriptor', -`DAD::ExportTotalIadls`,	-`DAD::ExportTotalDad`,	-`DAD::ExportTotalBadl`)
suppressMessages({
suppressWarnings({
library(rms) #Important: Leave library RMS here to not break shiny
})
})
data$`CBI::PercentSleepFCorrected` = as.numeric(data$`CBI::PercentSleepFCorrected`)
data$`CBI::PercentBeliefsFCorrected` = as.numeric(data$`CBI::PercentBeliefsFCorrected`)
df <- data %>% select(-'PID', -`Diagnosis_name`, -'Diagnosis_number', -`Sex (Male 1, Female 2)`, -`Onset till death`, -`Original_order`, -'SummaryPrimaryDiagnosis_descriptor', -`DAD::ExportTotalIadls`,	-`DAD::ExportTotalDad`,	-`DAD::ExportTotalBadl`)
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
#Standarize data
data_standardized <- as.data.frame(lapply(df, rescale), check.names = FALSE)
data_stand <- cbind(data$Diagnosis_name, data$`Diagnosis till death`, data$`Sex (Male 1, Female 2)`, data_standardized)
colnames(data_stand)[colnames(data_stand) == "data$Diagnosis_name"] <- "Diagnosis_name"
colnames(data_stand)[colnames(data_stand) == "data$`Sex (Male 1, Female 2)`"] <- "Sex (Male 1, Female 2)"
colnames(data_stand)[colnames(data_stand) == "data$`Diagnosis till death`"] <- "Diagnosis till death"
data_stand = data_stand %>% drop_na()
View(data_stand)
# colnames(data_stand_no_high_vif)
data_stand_no_high_vif = data_stand %>% select(-c(`ACEIII::ACEIIITotal`))
data$`CBI::PercentSleepFCorrected` = as.numeric(data$`CBI::PercentSleepFCorrected`)
data$`CBI::PercentBeliefsFCorrected` = as.numeric(data$`CBI::PercentBeliefsFCorrected`)
df <- data %>% select(-'PID', -`Diagnosis_name`, -'Diagnosis_number', -`Diagnosis till death`, -`Sex (Male 1, Female 2)`, -`Onset till death`, -`Original_order`, -'SummaryPrimaryDiagnosis_descriptor', -`DAD::ExportTotalIadls`,	-`DAD::ExportTotalDad`,	-`DAD::ExportTotalBadl`)
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
#Standarize data
data_standardized <- as.data.frame(lapply(df, rescale), check.names = FALSE)
data_stand <- cbind(data$Diagnosis_name, data$`Diagnosis till death`, data$`Sex (Male 1, Female 2)`, data_standardized)
colnames(data_stand)[colnames(data_stand) == "data$Diagnosis_name"] <- "Diagnosis_name"
colnames(data_stand)[colnames(data_stand) == "data$`Sex (Male 1, Female 2)`"] <- "Sex (Male 1, Female 2)"
colnames(data_stand)[colnames(data_stand) == "data$`Diagnosis till death`"] <- "Diagnosis till death"
data_stand = data_stand %>% drop_na()
data_stand_no_high_vif = data_stand %>% select(-c(`ACEIII::ACEIIITotal`))
fit <- coxph(Surv(`Diagnosis till death`) ~., data= data_stand_no_high_vif)
vif <- rms::vif(fit)
ggcorrplot(corr, type = "lower", ggtheme = ggplot2::theme_void, lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")
) + scale_y_discrete(position='right')
colnames(data_stand_no_high_vif) = gsub("FCorrected", "", colnames(data_stand_no_high_vif))
colnames(data_stand_no_high_vif) = gsub("ClinicalAssessment::", "", colnames(data_stand_no_high_vif))
corr<-cor(data_stand_no_high_vif[3:21])
summary_cox_full <- summary(fit)
coefs <- summary_cox_full$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
styled_table <- significant_vars_sorted %>% kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
styled_table
View(data_stand_no_high_vif)
colnames(data_stand_no_high_vif) = gsub("FCorrected", "", colnames(data_stand_no_high_vif))
colnames(data_stand_no_high_vif) = gsub("ClinicalAssessment::", "", colnames(data_stand_no_high_vif))
corr<-cor(data_stand_no_high_vif[3:21])
ggcorrplot(corr, type = "lower", ggtheme = ggplot2::theme_void, lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")
) + scale_y_discrete(position='right')
data_stand
colnames(data_stand)
data_stand_no_high_vif
colnames(data_stand_no_high_vif)
vif <- rms::vif(fit)
# colnames(data_stand_no_high_vif)
data_stand_no_high_vif = data_stand %>% select(-c(`ACEIII::ACEIIITotal`))
fit <- coxph(Surv(`Diagnosis till death`) ~., data= data_stand_no_high_vif)
vif <- rms::vif(fit)
data_stand_no_high_vif
colnames(data_stand_no_high_vif)
corr<-cor(data_stand_no_high_vif[4:21])
ggcorrplot(corr, type = "lower", ggtheme = ggplot2::theme_void, lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")
) + scale_y_discrete(position='right')
colnames(data_stand_no_high_vif) = gsub("ClinicalAssessment::", "", colnames(data_stand_no_high_vif))
corr<-cor(data_stand_no_high_vif[4:21])
ggcorrplot(corr, type = "lower", ggtheme = ggplot2::theme_void, lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")
) + scale_y_discrete(position='right')
summary_cox_full <- summary(fit)
coefs <- summary_cox_full$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
styled_table <- significant_vars_sorted %>% kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
styled_table
coefs <- summary_cox_full$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
styled_table <- significant_vars_sorted %>% kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
summary_cox_full
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_cox <- summary(fit)
coefs <- diagnosis_cox$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
#   significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
#   significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
#   colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "weibull")
diagnosis_cox <- summary(fit)
coefs <- diagnosis_cox$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
#   significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
#   significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
#   colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "weibull")
diagnosis_cox <- summary(fit)
coefs <- diagnosis_cox$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
#   significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
#   significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
#   colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_cox <- summary(fit)
coefs <- diagnosis_cox$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
#   significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
#   significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
#   colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
coefs
diagnosis_cox
diagnosis_cox
diagnosis_cox$coefficients
diagnosis_cox
diagnosis_fit <- summary(fit)
coefs <- diagnosis_cox$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
#   significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
#   significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
#   colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
coefs
diagnosis_fit <- summary(fit) %>% as.data.frame()
diagnosis_fit$x
diagnosis_fit$table
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
coefs
#| warning: false
headings <- names(significant_vars_list)
for (i in seq_along(significant_vars_list)) {
cat("# ", headings[i], "\n")
print(kable(significant_vars_list[[i]], format = "markdown") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")))
cat("\n\n")}
significant_vars
coefs
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs[coefs[, "p"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
coefs
fit
diagnosis_fit
coefs
coefs
significant_vars <-coefs %>% filter("p" < 0.05)
significant_vars
colnames(coefs)
significant_vars <- coefs %>% filter("p" < 0.05)
significant_vars
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs %>% filter("p" < 0.05)
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs %>% filter("p" < 0.05)
print(significant_vars)
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs %>% filter("p" < 0.05)
print(coefs)
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
View(coefs)
ignificant_vars <- coefs %>% filter("p" < 0.05)
significant_vars <- coefs %>% filter("p" < 0.05)
View(significant_vars_sorted)
View(significant_vars)
significant_vars <- coefs %>% filter(p < 0.05)
print(coefs)
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs %>% filter(p < 0.05)
print(coefs)
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
colnames(coefs) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars <- coefs[coefs[, "P Value"] < 0.05, ]
print(coefs)
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
colnames(coefs) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars <- coefs[coefs[, "P Value"] < 0.05, ]
print(coefs)
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
colnames(coefs) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars <- coefs[coefs[, "P Value"] < 0.05, ]
print(significant_vars)
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars_list[[name]] = coefs
}
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
colnames(coefs) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars <- coefs[coefs[, "P Value"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"Coefficient"]), decreasing = TRUE), ]
significant_vars_list[[name]] = coefs
}
#| warning: false
headings <- names(significant_vars_list)
for (i in seq_along(significant_vars_list)) {
cat("# ", headings[i], "\n")
print(kable(significant_vars_list[[i]], format = "markdown") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")))
cat("\n\n")}
significant_vars
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data_stand_filtered
data_stand_filtered
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
data_stand_filtered
data_stand_filtered
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data_stand_filtered
data %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data
data %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data_park = data %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
View(data_park)
mapping_vector
data
View(data)
data
data$Diagonsis_name %>% table()
data$Diagnosis_name %>% table()
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data_stand_filtered
data_stand_filtered_p = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data_stand_no_high_vif$Diagnosis_name %>% table()
data_stand_filtered_p
data_stand_filtered_p = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfv-PPA + Parkinson's plus")
data_stand_filtered_p
mapping_vector
data_stand_filtered_p = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfvPPA + Parkinson's plus")
data_stand_filtered_p
mapping_vector
data_park = data %>% filter(Diagnosis_name == "nfvPPA + Parkinsonâ€™s plus")
data_stand_filtered_p = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfvPPA + Parkinsonâ€™s plus")
data_stand_filtered_p
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
data_stand_filtered
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
data_stand_filtered_p = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfvPPA + Parkinsonâ€™s plus")
data_stand_filtered_p = data_stand_filtered_p %>% select(-Diagnosis_name)
data_stand_filtered_p
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
View(data_stand_filtered_p)
data_stand_filtered_p = data_stand_no_high_vif %>% filter(Diagnosis_name == "nfvPPA + Parkinsonâ€™s plus")
data_stand_filtered_p = data_stand_filtered_p %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered_p, dist = "lognormal")
fit
diagnosis_fit <- summary(fit)
diagnosis_fit
coefs = coefs %>% drop_na()
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
coefs = coefs %>% drop_na()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
colnames(coefs) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars <- coefs[coefs[, "P Value"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"Coefficient"]), decreasing = TRUE), ]
significant_vars_list[[name]] = significant_vars_sorted
}
# colnames(data_stand_no_high_vif)
data_stand_no_high_vif = data_stand %>% select(-c(`ACEIII::ACEIIITotal`))
fit <- coxph(Surv(`Diagnosis till death`) ~., data= data_stand_no_high_vif)
vif <- rms::vif(fit)
colnames(data_stand_no_high_vif) = gsub("FCorrected", "", colnames(data_stand_no_high_vif))
colnames(data_stand_no_high_vif) = gsub("ClinicalAssessment::", "", colnames(data_stand_no_high_vif))
corr<-cor(data_stand_no_high_vif[4:21])
ggcorrplot(corr, type = "lower", ggtheme = ggplot2::theme_void, lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")
) + scale_y_discrete(position='right')
summary_cox_full <- summary(fit)
coefs <- summary_cox_full$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
significant_vars <- coefs[coefs[, "Pr(>|z|)"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
styled_table <- significant_vars_sorted %>% kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
styled_table
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
coefs = coefs %>% drop_na()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
colnames(coefs) <- c("Coefficient", "Std. Error", "z value", "P Value")
significant_vars <- coefs[coefs[, "P Value"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"Coefficient"]), decreasing = TRUE), ]
significant_vars_list[[name]] = significant_vars_sorted
}
diagnosis_fit
significant_vars_list = list()
for (name in unique_dx) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_filtered, dist = "lognormal")
diagnosis_fit <- summary(fit)
coefs <- diagnosis_fit$table %>% as.data.frame()
coefs = coefs %>% drop_na()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
colnames(coefs) <- c("Coefficient", "Std. Error", "z value", "p value")
significant_vars <- coefs[coefs[, "p value"] < 0.05, ]
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"Coefficient"]), decreasing = TRUE), ]
significant_vars_list[[name]] = significant_vars_sorted
}
data_stand_no_high_vif = data_stand %>% select(-c(`ACEIII::ACEIIITotal`))
fit <- survreg(Surv(`Diagnosis till death`) ~ ., data = data_stand_no_high_vif, dist = "lognormal")
# fit <- coxph(Surv(`Diagnosis till death`) ~., data= data_stand_no_high_vif)
vif <- rms::vif(fit)
vif
summary_cox_full <- summary(fit)
coefs <- summary_cox_full$table %>% as.data.frame()
coefs
=======
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
#| warning: false
headings <- names(significant_vars_list)
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinsonâ€™s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinsonâ€™s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinsonâ€™s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
headings
significant_vars_list
significant_vars_list
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinsonâ€™s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
significant_vars_list
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinsonâ€™s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
library(readxl)
library(tidyverse)
library("survival")
library("survminer")
library(scales)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
# data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
data$Diagnosis_number = as.factor(data$Diagnosis_number)
data$`CBI::PercentSleepFCorrected` = as.numeric(data$`CBI::PercentSleepFCorrected`)
data$`CBI::PercentBeliefsFCorrected` = as.numeric(data$`CBI::PercentBeliefsFCorrected`)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinsonâ€™s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
#Non numeric variables
non_numeric_vars <- names(data)[!sapply(data, is.numeric)]
#Delete non numeric variables
df <- data %>% select(-'PID', -`Diagnosis_name`, -'Diagnosis_number', -`Onset till death`, -`Original_order`, -'SummaryPrimaryDiagnosis_descriptor', -`DAD::ExportTotalIadls`,	-`DAD::ExportTotalDad`,	-`DAD::ExportTotalBadl`)
#Standarize data
data_standardized <- as.data.frame(lapply(df, rescale), check.names = FALSE)
#Combine non numeric variables
data_stand <- cbind(data$Diagnosis_name, data_standardized)
colnames(data_stand)[colnames(data_stand) == "data$Diagnosis_name"] <- "Diagnosis_name"
colnames(data_stand)[colnames(data_stand) == "data$`Sex (Male 1, Female 2)`"] <- "Sex (Male 1, Female 2)"
data_stand$`Sex (Male 1, Female 2)` = as.factor(data_stand$`Sex (Male 1, Female 2)`)
# colnames(data_stand)[colnames(data_stand) == "data$`CBI::PercentBeliefsFCorrected`"] <- "CBI::PercentBeliefsFCorrected"
# colnames(data_stand)[colnames(data_stand) == "data$`CBI::PercentSleepFCorrected`"] <- "CBI::PercentSleepFCorrected"
survreg(Surv(`Diagnosis till death`) ~., dist = "weibull", data = data_stand)
data_stand$status <- rep(1, nrow(data))
survreg(Surv(`Diagnosis till death`) ~., dist = "weibull", data = data_stand)
survreg(Surv(`Diagnosis till death`, status) ~., dist = "weibull", data = data_stand)
survreg(Surv(Diagnosis till death, status) ~., dist = "weibull", data = data_stand)
survreg(Surv(data_stand$`Diagnosis till death`, data_stand$status) ~., dist = "weibull", data = data_stand)
data_stand
surv_model <- survreg(Surv(`Diagnosis till death`, status) ~., dist = "weibull", data = data_stand)
summary(data_stand$`Diagnosis till death`)
data_stand$`Diagnosis till death`)
data_stand$`Diagnosis till death`
data$status <- rep(1, nrow(data))
surv_model <- survreg(Surv(`Diagnosis till death`, status) ~., dist = "weibull", data = data_stand)
surv_model <- survreg(Surv(`Diagnosis till death`, status) ~., dist = "weibull", data = data)
summary(surv_model)
?survreg
surv_model2 <- survreg(Surv(`Diagnosis till death`, status) ~., dist = "lognormal", data = data)
summary(surv_model2)
surv_model3 <- survreg(Surv(`Diagnosis till death`, status) ~., dist = "gamma", data = data)
>>>>>>> 05d041118da5a57a513142f73de828a5770fbbd3
