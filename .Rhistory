coefs <- summary_cox_full$coefficients %>% as.data.frame()
coefs
coefs
rownames(coefs)<- sub("\\`", "", names(coefs))  # Remove backticks from names for display
rownames(coefs)<- sub("//`", "", names(coefs))  # Remove backticks from names for display
rownames(coefs)<- sub("`", "", names(coefs))
rownames(coefs)<- sub("`", " ", names(coefs))
coefs
rownames(coefs)
rownames(coefs)<- sub("`", "", rownames(coefs))
coefs
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", "", rownames(coefs))
coefs
coefs <- summary_cox_full$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
coefs
rownames(coefs)<- sub("`", "", rownames(coefs))
coefs
coefs <- summary_cox_full$coefficients %>% as.data.frame()
rownames(coefs)<- sub("`", "", rownames(coefs))
rownames(coefs)<- sub("`", " ", rownames(coefs))
coefs
significant_vars_sorted <- significant_vars[order(abs(significant_vars[,"coef"]), decreasing = TRUE), ]
colnames(significant_vars_sorted) <- c("Coefficient","Exp(Coefficient)", "Std. Error", "z value", "P Value")
styled_table <- significant_vars_sorted %>% kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
styled_table
unique_diagnosis= data$Diagnosis_name %>% unique()
for (name in unique_diagnosis) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- coxph(Surv(`Diagnosis till death`) ~., data= data_stand_filtered)
print(fit)
}
unique_diagnosis= data$Diagnosis_name %>% unique()
for (name in unique_diagnosis) {
data_stand_filtered = data_stand_no_high_vif %>% filter(Diagnosis_name == name)
data_stand_filtered = data_stand_filtered %>% select(-Diagnosis_name)
fit <- coxph(Surv(`Diagnosis till death`) ~., data= data_stand_filtered)
print(fit)
}
#| warning: false
headings <- names(significant_vars_list)
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinson’s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
#| warning: false
headings <- names(significant_vars_list)
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinson’s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinson’s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinson’s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
headings
significant_vars_list
significant_vars_list
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinson’s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
significant_vars_list
#| context: server
library(survival)
library(tidyverse)
library(survminer)
library(pammtools)
data = readxl::read_xlsx("240508_Survival_project_for_maths_students_opened.xlsx")
data$`Sex (Male 1, Female 2)` = as.factor(data$`Sex (Male 1, Female 2)`)
data[data == 999.0] <- NA
data = data %>% filter(!Diagnosis_number == 2.5)
mapping_vector <- c("AD", "lvPPA", "bvFTD", "svPPA", "nfvPPA", "nfvPPA + Parkinson’s plus", "CBS", "PSP", "FTD-MND")
names(mapping_vector) <- c("1", "10", "2", "16", "12", "4", "3", "14", "9")
data$Diagnosis_name <- mapping_vector[as.character(data$Diagnosis_number)]
subset_columns <- c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number")
# Remove rows with missing values in the specified subset of columns
data_cleaned <- data %>%
filter(rowSums(is.na(select(., all_of(subset_columns)))) == 0)
data_cleaned = data_cleaned %>% select(c("Diagnosis till death", "Age at diagnosis", "Sex (Male 1, Female 2)", "Disease duration at diagnosis", "ACEIII::ACEIIITotal", "Diagnosis_number", "Diagnosis_name"))
obs_start = data.frame(time = 0, surv = 1, upper = 1, lower = 1)
reactiveData1 <- reactive({
validate(
need(input$age_1 != "", "Please input an age number in patient group 1"),
need(input$duration_1 != "", "Please input a disease duration at diagnosis number in patient group 1"),
need(input$ace_total_1 != "", "Please input an ACE-III total in patient group 1")
)
sex_numeric_1 <- ifelse(input$sex_1 == "Male", 1, 2)
data.frame(
obs = "Patient Group 1",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_1),
`Age at diagnosis` = input$age_1,
`Disease duration at diagnosis` = input$duration_1,
`ACEIII::ACEIIITotal` = input$ace_total_1,
diagnosis = input$diagnosis_1,
check.names = FALSE)
})
reactiveData2 <- reactive({
validate(
need(input$age_2 != "", "Please input an age number in patient group 2"),
need(input$duration_2 != "", "Please input a disease duration at diagnosis number in patient group 2"),
need(input$ace_total_2 != "", "Please input an ACE-III total in patient group 2")
)
sex_numeric_2 <- ifelse(input$sex_2 == "Male", 1, 2)
data.frame(
obs = "Patient Group 2",
`Sex (Male 1, Female 2)` = as.integer(sex_numeric_2),
`Age at diagnosis` = input$age_2,
`Disease duration at diagnosis` = input$duration_2,
`ACEIII::ACEIIITotal` = input$ace_total_2,
diagnosis = input$diagnosis_2,
check.names = FALSE)
})
#Make model for the diagnosis selected
rv_model_1 = reactive({
filter_data_1 = data_cleaned %>% filter(Diagnosis_name == reactiveData1()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_1, model = TRUE)
})
rv_model_2 = reactive({
filter_data_2 = data_cleaned %>% filter(Diagnosis_name == reactiveData2()$diagnosis)
cox_model <- coxph(Surv(`Diagnosis till death`) ~ `Age at diagnosis` + `Sex (Male 1, Female 2)` + `Disease duration at diagnosis` + `ACEIII::ACEIIITotal`, data =  filter_data_2, model = TRUE)
})
#Fit the new data with the model and make a dataframe
surv_fit_1 <- reactive({
# req(rv_model_1())
fit1 <- survfit(rv_model_1(), newdata = reactiveData1()[2:5]) %>% surv_summary() %>% as.data.frame()
fit1 = bind_rows(fit1, obs_start)
fit1 = fit1%>% mutate(obs = "Patient Group 1")
})
surv_fit_2 <- reactive({
# req(rv_model_2())
fit2 <- survfit(rv_model_2(), newdata = reactiveData2()[2:5]) %>% surv_summary() %>% as.data.frame()
fit2 = bind_rows(fit2, obs_start) %>% mutate(obs = "Patient Group 2")
})
new_patients <- reactive({
new_obs <- rbind(surv_fit_1(), surv_fit_2())  # Combine the results
})
output$dataTable <- renderTable({
new_patients()
})
